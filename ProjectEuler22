#Project Euler problem 22:
#
#Using names.txt (right click and 'Save Link/Target As...'), a 46K text file containing over five-thousand first names,
# begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, multiply this
# value by its alphabetical position in the list to obtain a name score.
#
#For example, when the list is sorted into alphabetical order, COLIN, which is worth 3 + 15 + 12 + 9 + 14 = 53, is the
# 938th name in the list. So, COLIN would obtain a score of 938 Ã— 53 = 49714.
#
#What is the total of all the name scores in the file?


letter_values = {}
letter = 'a'
while ord(letter) <= 96+26 :
    letter_values[letter] = ord(letter) - 96
    letter = chr(ord(letter) + 1)

def alpha_value(s) :
    alpha_val = 0
    for l in s :
        alpha_val = alpha_val + letter_values[l]
    return alpha_val

#open the file of names
names_file = open("names.txt", "r")

#read names from file into list
names_str = names_file.read()

#split string of names into a list
names = names_str.split(",")
names.sort()

i = 0
while i < len(names) :
    names[i] = names[i].replace("\"", "")
    i += 1

total = 0
for n in names :
    alpha_val = alpha_value(n.lower())

    name_score = alpha_val * (names.index(n) + 1)

    total += name_score

print(total)
